name: .NET Core

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --no-restore --verbosity normal
  
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    env:
      AWS_REGION: eu-west-2
      APP_NAME: codenames
      ENVIRONMENT_NAME: codenames-live
      
    steps:
      - uses: actions/checkout@v2
      - name: Publish project
        run: dotnet publish -o out -c Release accessible-codenames
      - name: Copy manifest to output
        run: cp accessible-codenames/aws-windows-deployment-manifest.json out
      - name: Zip up deployment
        working-directory: out
        run: zip -r ../out.zip *
      - name: Get current time
        uses: gerred/actions/current-time@master
        id: current-time
      - name: Normalize Time
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '^(\d{4})-(\d{2})-(\d{2})[T\s]?(\d+)\:(\d+)\:(\d+).+'
          string: "${{ steps.current-time.outputs.time }}"
          replace-with: '$1.$2.$3.$4$5$6'
          flags: 'g'
      - name: Output version
        run: echo "Deploying v${{ steps.format-time.outputs.replaced }}"
      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v10
        timeout-minutes: 10
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          region: ${{ env.AWS_REGION }}
          application_name: ${{ env.APP_NAME }}
          environment_name: ${{ env.ENVIRONMENT_NAME }}
          version_label: "v${{ steps.format-time.outputs.replaced }}"
          deployment_package: out.zip
      - name: Tag deployment
        uses: tvdias/github-tagger@v0.0.2
        with:
          tag: "v${{ steps.format-time.outputs.replaced }}"
